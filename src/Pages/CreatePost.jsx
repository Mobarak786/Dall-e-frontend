import React from "react";
import { FormField, Loader } from "../Components";
import { useState } from "react";
import { useNavigate } from "react-router-dom";
import Header from "./Header";
import { getRandomPrompt } from "../Utils";

import preview from "../assets/preview.png";

const CreatePost = () => {
  const navigate = useNavigate();
  const [form, setForm] = useState({
    prompt: "",
    name: "",
    photo: "",
  });
  const [generatingImage, setGeneratingImage] = useState(false);
  const [loading, setLoading] = useState(false);
  const handleSubmit = async (e) => {
    if (form.prompt && form.photo) {
      try {
        e.preventDefault();
        setGeneratingImage(true);
        const response = await fetch(
          "https://ai-image-generation-production.up.railway.app/"
          {
            method: "POST",
            headers: { "content-type": "application/json" },
            body: JSON.stringify(form)
          }
        );
        await response.json();
        navigate("/");
      } catch (error) {
        alert(error);
      } finally {
        setGeneratingImage(false);
      }
    }
  };
  const handleChange = (e) => {
    setForm({ ...form, [e.target.name]: e.target.value });
  };

  const handleSurpriseMe = (event) => {
    event.preventDefault();
    const randomPrompt = getRandomPrompt(form.prompt);
    setForm({ ...form, prompt: randomPrompt });
  };

  const generateImage = async () => {
    if (form.prompt) {
      try {
        setGeneratingImage(true);
        const response = await fetch(
          "https://ai-art.up.railway.app/api/v1/dalle",
          {
            method: "POST",
            headers: { "content-type": "application/json" },
            body: JSON.stringify({ prompt: form.prompt }),
          }
        );
        const data = await response.json();
        setForm({ ...form, photo: `${data.photo}` });
      } catch (error) {
        alert(error);
      } finally {
        setGeneratingImage(false);
      }
    } else {
      alert("please enter a prompt");
    }
  };
  return (
    <section className="mx-auto max-w-7xl">
      <Header />
      <div className="mt-5 p-5">
        <h1 className="text-[32px] text-gray-900 font-extrabold">Create</h1>
        <p className="mt-2 max-w-[500px] text-[#666e75] text-[16px] ">
          Create Your Own Collection Of Immaginative And Stunning Images
          Generated By DALL-E AI
        </p>
      </div>
      <form className="max-w-3xl mt-10 p-5" onSubmit={handleSubmit}>
        <div className=" flex flex-col gap-5">
          <FormField
            labelName="Your Name"
            type="text"
            name="name"
            placeholder="Enter Name"
            value={form.name}
            handleChange={handleChange}
          />
          <FormField
            labelName="Your Prompt"
            type="text"
            name="prompt"
            placeholder="A Dinosaur exploring Cape Town, photography"
            value={form.prompt}
            isSurpriseMe
            handleSurpriseMe={handleSurpriseMe}
            handleChange={handleChange}
          />
          <div
            className=" relative  bg-gray-50 border border-gray-300
          text-gray-900 text-sm rounded-lg hover:border-blue-500 
          w-64 h-64 p-2 flex justify-center items-center mx-auto lg:mx-0"
          >
            {form.photo ? (
              <img
                src={form.photo}
                alt={form.prompt}
                className="w-full h-full object-cover"
              />
            ) : (
              <img
                src={preview}
                alt="preview"
                className="w-9/12 h-9/12 object-contain opacity-40"
              />
            )}
            {generatingImage && (
              <div className="absolute flex justify-center items-center inset-0 z-0">
                <Loader />
              </div>
            )}
          </div>
        </div>
        <div className="mt-5 flex gap-5 ">
          <button
            type="button"
            onClick={generateImage}
            className="text-white bg-green-600 font-medium rounded-md
           text-sm w-full sm:w-auto px-5 py-2.5 text-center mt-5"
          >
            {generatingImage ? "Generating..." : "Generate"}
          </button>
        </div>
        <div className="mt-10">
          <p className="mt-2 text-[#666e75] text-[14px]">
            Once you have created the image you want you can share it to others
            in the community
          </p>
          <button
            className=" mt-3 text-white bg-blue-500 font-medium rounded-md
          text-sm w-full px-5 py-2.5 text-center sm:w-auto "
            type="submit"
          >
            {loading ? "Sharing" : "Share it to others in community "}
          </button>
        </div>
      </form>
    </section>
  );
};

export default CreatePost;
